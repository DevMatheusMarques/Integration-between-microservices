services:
  db:
    image: mysql:8.0.34
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms_usuario
      MYSQL_USER: docker
      MYSQL_PASSWORD: admindocker@123
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3309
    ports:
      - "3309:3309"
    networks:
      - matheus-network

  rabbitmq:
    image: "rabbitmq:3-management"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      timeout: 100s
      interval: 100s
      retries: 3
    container_name: my-rabbit-container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - matheus-network

  mongo:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: logs
    ports:
      - "27017:27017"
    networks:
      - matheus-network

  msusers:
    image: mhcm/msusers
    restart: always
    build: ./ms-usuario
    working_dir: /ms-usuario
    container_name: msusers
    environment:
      TZ: America/Sao_Paulo
      SPRING.DATASOURCE.URL: jdbc:mysql://db:3309/ms_usuario?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING.DATASOURCE.USERNAME: docker
      SPRING.DATASOURCE.PASSWORD: admindocker@123
      SPRING.RABBITMQ.HOST: rabbitmq
      SPRING.RABBITMQ.PORT: 5672
      SPRING.RABBITMQ.USERNAME: guest
      SPRING.RABBITMQ.PASSWORD: guest
    ports:
      - "8080:8080"
    command: mvn spring-boot:run
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - matheus-network

  notify:
    image: mhcm/notify
    restart: always
    build: ./ms-notify
    working_dir: /ms-notify
    container_name: notify
    environment:
      TZ: America/Sao_Paulo
      SPRING.DATA.MONGODB.URI: mongodb://mongo:27017/logs
      SPRING.RABBITMQ.HOST: rabbitmq
      SPRING.RABBITMQ.PORT: 5672
      SPRING.RABBITMQ.USERNAME: guest
      SPRING.RABBITMQ.PASSWORD: guest
    ports:
      - "8081:8081"
    command: mvn spring-boot:run
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - matheus-network

  frontend:
    image: mhcm/frontend
    build:
      context: ./ms-frontend
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - "5173:80"
    container_name: vue-app-container
    restart: always
    networks:
      - matheus-network

networks:
  matheus-network:
    driver: bridge
